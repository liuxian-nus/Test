
package FBMS.session;

import FBMS.entity.RestaurantEntity;
import Exception.ExistException;
import java.util.List;

import javax.ejb.Stateless;
import javax.ejb.TransactionAttribute;
import javax.ejb.TransactionAttributeType;
import javax.persistence.EntityManager;
import javax.persistence.NoResultException;
import javax.persistence.PersistenceContext;
import javax.persistence.Query;

/**
 *
 * @author Jieqiong
 */

@Stateless
public class RestaurantSessionBean implements RestaurantSessionBeanRemote{
    
    
    private RestaurantEntity restaurant;
    @PersistenceContext(unitName = "IRMS-ejbPU")
    private EntityManager em;
    
    public RestaurantSessionBean (){
    }
    
    /*E.4.2.1 Create restaurant*/
    @TransactionAttribute(TransactionAttributeType.REQUIRED)
    @Override
    public RestaurantEntity addRestaurant(RestaurantEntity restaurant) {
        em.persist(restaurant);
        return restaurant;
    }
    
    /*E.4.2.2 Update restaurant information*/
    @TransactionAttribute(TransactionAttributeType.REQUIRED)   
    @Override
    public RestaurantEntity updateRestaurant(Long restId,String restNeighbourhood,
            String restTypeOfPlace, String restCuisine,String restName) throws ExistException{
        
        restaurant=em.find(RestaurantEntity.class, restId);
        if(restaurant==null) throw new ExistException ("Restaurant doesn't exist!");
        
        //Since restId is autogenerated, it cannot be changed.
        restaurant.setRestNeighbourhood(restNeighbourhood);
        restaurant.setRestTypeOfPlace(restTypeOfPlace);
        restaurant.setRestCuisine(restCuisine);
        restaurant.setRestName(restName);
        
        em.merge(restaurant);
        return restaurant;
    }

    @Override
    public void persist(Object object) {
        em.persist(object);
    }
    
    public List<RestaurantEntity> getAllRestaurants() throws NoResultException{
        Query query = em.createQuery("SELECT r FROM RestaurantEntity r");
        return query.getResultList();
    }
    
}
